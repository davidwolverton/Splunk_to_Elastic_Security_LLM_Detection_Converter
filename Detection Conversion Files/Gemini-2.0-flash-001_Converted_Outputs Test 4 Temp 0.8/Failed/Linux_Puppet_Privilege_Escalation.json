{
  "actions": [],
  "alias_purpose": "detection_rule",
  "author": [
    "Google Gemini 2.0 Flash 001",
    "Gowthamaraj Rajendran, Splunk"
  ],
  "building_block_type": "default",
  "description": "Google Gemini 2.0 Flash 001: The following analytic detects the execution of Puppet commands with elevated privileges, specifically when Puppet is used to apply configurations with sudo rights. This detection leverages data from Endpoint Detection and Response (EDR) agents, focusing on process execution logs that include command-line details. This activity is significant because it indicates a potential privilege escalation attempt, where a user could gain root access and execute system commands as the root user. If confirmed malicious, this could allow an attacker to fully compromise the system, execute arbitrary commands, and maintain persistent control. This rule was converted with Google Gemini 2.0 Flash 001.",
  "enabled": true,
  "false_positives": [
    "False positives may be present, filter as needed."
  ],
  "from": "now-60m",
  "interval": "10m",
  "license": "Apache 2.0",
  "max_signals": 100,
  "name": "Google Gemini 2.0 Flash 001: Linux Puppet Privilege Escalation",
  "note": "### Additional Details\n* **Data Source:** Sysmon for Linux EventID 1\n* **Date:** 2025-02-10\n\n### Drilldown Searches\n* View the detection results for - \"$dest$\": `%original_detection_search% | search  dest = \"$dest$\"`\n* View risk events for the last 7 days for - \"$dest$\": `| from datamodel Risk.All_Risk | search normalized_risk_object IN (\"$dest$\") starthoursago=168  | stats count min(_time) as firstTime max(_time) as lastTime values(search_name) as \"Search Name\" values(risk_message) as \"Risk Message\" values(analyticstories) as \"Analytic Stories\" values(annotations._all) as \"Annotations\" values(annotations.mitre_attack.mitre_tactic) as \"ATT&CK Tactics\" by normalized_risk_object | security_content_ctime(firstTime) | security_content_ctime(lastTime)`\n\n### How To Implement\nThe detection is based on data that originates from Endpoint Detection and Response (EDR) agents. These agents are designed to provide security-related telemetry from the endpoints where the agent is installed. To implement this search, you must ingest logs that contain the process GUID, process name, and parent process. Additionally, you must ingest complete command-line executions. These logs must be processed using the appropriate Splunk Technology Add-ons that are specific to the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint` data model. Use the Splunk Common Information Model (CIM) to normalize the field names and speed up the data modeling process.\n\n### References\n* [GTFOBins: Puppet](https://gtfobins.github.io/gtfobins/puppet/)\n* [Wikipedia: Puppet (software)](https://en.wikipedia.org/wiki/Puppet_(software))\n",
  "output_index": ".siem-signals-default",
  "references": [
    "https://gtfobins.github.io/gtfobins/puppet/",
    "https://en.wikipedia.org/wiki/Puppet_(software)"
  ],
  "risk_score": 47,
  "rule_id": "Google_Gemini_2.0_Flash_001_Linux_Puppet_Privilege_Escalation",
  "severity": "high",
  "tags": [
    "Google Gemini 2.0 Flash 001",
    "Linux Privilege Escalation",
    "Linux Living Off The Land",
    "Endpoint",
    "T1548.003",
    "Splunk Enterprise",
    "Splunk Enterprise Security",
    "Splunk Cloud",
    "endpoint"
  ],
  "threat": [
    {
      "framework": "MITRE ATT&CK",
      "tactic": {
        "id": "TA0004",
        "name": "Privilege Escalation"
      },
      "technique": [
        {
          "id": "T1548.003",
          "name": "Abuse Elevation Control Mechanism: Sudo and su",
          "reference": "https://attack.mitre.org/techniques/T1548/003"
        }
      ]
    }
  ],
  "throttle": "no_actions",
  "type": "eql",
  "version": 1,
  "language": "eql",
  "query": "sequence by host.name\n  [process where event.type == \"start\" and process.name == \"puppet\" and process.args : \"apply\" and process.args : \"-e\" and process.args : \"exec\" and process.args : \"sudo\"]\n",
  "index": [
    "logs-endpoint.events.*"
  ]
}