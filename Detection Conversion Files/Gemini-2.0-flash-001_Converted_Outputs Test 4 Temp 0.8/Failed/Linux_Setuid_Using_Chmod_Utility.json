{
  "actions": [],
  "alias_purpose": "savedObjectConversion",
  "author": [
    "Google Gemini 2.0 Flash 001",
    "Teoderick Contreras"
  ],
  "building_block_type": "default",
  "description": "Google Gemini 2.0 Flash 001: The following analytic detects the execution of the chmod utility to set the SUID or SGID bit on files, which can allow users to temporarily gain root or group-level access. This detection leverages data from Endpoint Detection and Response (EDR) agents, focusing on process names and command-line arguments related to chmod. This activity is significant as it can indicate an attempt to escalate privileges or maintain persistence on a system. If confirmed malicious, an attacker could gain elevated access, potentially compromising sensitive data or critical system functions. This rule was converted with Google Gemini 2.0 Flash 001.",
  "enabled": true,
  "false_positives": [
    "Administrator or network operator can execute this command. Please update the filter macros to remove false positives."
  ],
  "from": "now-60m",
  "interval": "10m",
  "investigation_fields": {
    "field_names": []
  },
  "license": "Elastic License v2",
  "max_signals": 100,
  "meta": {
    "version": 5
  },
  "name": "Google Gemini 2.0 Flash 001: Linux Setuid Using Chmod Utility",
  "note": "The detection is based on data that originates from Endpoint Detection and Response (EDR) agents. These agents are designed to provide security-related telemetry from the endpoints where the agent is installed. To implement this search, you must ingest logs that contain the process GUID, process name, and parent process. Additionally, you must ingest complete command-line executions. These logs must be processed using the appropriate Elastic Endpoint or Sysmon for Linux. The logs must also be mapped to the `Processes` node of the `Endpoint` data model. Use the Elastic Common Schema (ECS) to normalize the field names and speed up the data modeling process.",
  "output_index": ".siem-signals-default",
  "references": [
    "https://www.hackingarticles.in/linux-privilege-escalation-using-capabilities/"
  ],
  "risk_score": 49,
  "rule_id": "bf0304b6-6250-11ec-9d7c-acde48001122",
  "severity": "high",
  "tags": [
    "Google Gemini 2.0 Flash 001",
    "Linux Privilege Escalation",
    "Linux Persistence Techniques",
    "Linux Living Off The Land",
    "Endpoint",
    "T1548.001"
  ],
  "threat": [
    {
      "framework": "MITRE ATT&CK",
      "tactic": {
        "id": "TA0004",
        "name": "Privilege Escalation",
        "reference": "https://attack.mitre.org/tactics/TA0004/"
      },
      "technique": [
        {
          "id": "T1548.001",
          "name": "Setuid and Setgid",
          "reference": "https://attack.mitre.org/techniques/T1548/001/"
        }
      ]
    }
  ],
  "throttle": "no_actions",
  "to": "now",
  "type": "eql",
  "language": "eql",
  "query": "sequence by process.entity_id\n  [\n    process where event.category == \"process\" and event.type == \"start\" and process.name == \"chmod\" and\n     (process.args in (\"g+s\", \"u+s\") or process.args : \"*4777*\" or process.args : \"*4577*\")\n  ]\n  [\n    process where event.category == \"file\" and event.type == \"change\" and file.mode contains \"s\"\n  ]",
  "index": [
    "logs-endpoint.events.*",
    "auditbeat-*",
    "logs-system.*"
  ]
}