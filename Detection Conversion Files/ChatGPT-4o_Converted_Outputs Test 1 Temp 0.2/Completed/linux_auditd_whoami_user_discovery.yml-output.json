{
  "actions": [],
  "author": ["Teoderick Contreras", "OpenAI GPT4-o"],
  "description": "The following analytic detects the suspicious use of the whoami command, which may indicate an attacker trying to gather information about the current user account on a compromised system. The whoami command is commonly used to verify user privileges and identity, especially during initial stages of an attack to assess the level of access. By monitoring for unusual or unauthorized executions of whoami, this analytic helps in identifying potential reconnaissance activities, enabling security teams to take action before the attacker escalates privileges or conducts further malicious operations. Converted with OpenAI GPT4-o.",
  "enabled": true,
  "false_positives": ["Administrator or network operator can use this application for automation purposes. Please update the filter macros to remove false positives."],
  "from": "now-360s",
  "interval": "5m",
  "max_signals": 100,
  "name": "OpenAI GPT4-o Linux Auditd Whoami User Discovery",
  "output_index": ".siem-signals-default",
  "references": [
    "https://www.splunk.com/en_us/blog/security/deep-dive-on-persistence-privilege-escalation-technique-and-detection-in-linux-platform.html",
    "https://github.com/peass-ng/PEASS-ng/tree/master/linPEAS"
  ],
  "risk_score": 50,
  "risk_score_mapping": [],
  "rule_id": "d1ff2e22-310d-446a-80b3-faedaa7b3b52",
  "severity": "medium",
  "severity_mapping": [],
  "tags": ["Linux Living Off The Land", "Linux Privilege Escalation", "Linux Persistence Techniques", "Compromised Linux Host", "OpenAI GPT4-o"],
  "threat": [
    {
      "framework": "MITRE ATT&CK",
      "tactic": {
        "id": "TA0007",
        "name": "Discovery",
        "reference": "https://attack.mitre.org/tactics/TA0007/"
      },
      "technique": [
        {
          "id": "T1033",
          "name": "System Owner/User Discovery",
          "reference": "https://attack.mitre.org/techniques/T1033/"
        }
      ]
    }
  ],
  "to": "now",
  "type": "eql",
  "version": 1,
  "language": "eql",
  "query": "process where event.action == \"executed\" and process.name == \"whoami\" and process.parent.name != \"expected_parent_process\""
}