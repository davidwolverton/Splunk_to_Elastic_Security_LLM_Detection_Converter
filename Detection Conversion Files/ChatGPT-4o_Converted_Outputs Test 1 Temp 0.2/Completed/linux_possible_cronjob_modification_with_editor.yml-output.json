{
  "actions": [],
  "author": ["Teoderick Contreras", "OpenAI GPT4-o"],
  "description": "The following analytic detects potential unauthorized modifications to Linux cronjobs using text editors like \"nano,\" \"vi,\" or \"vim.\" It identifies this activity by monitoring command-line executions that interact with cronjob configuration paths. This behavior is significant for a SOC as it may indicate attempts at privilege escalation or establishing persistent access. If confirmed malicious, the impact could be severe, allowing attackers to execute damaging actions such as data theft, system sabotage, or further network penetration. Converted with OpenAI GPT4-o.",
  "enabled": true,
  "false_positives": ["Administrator or network operator can use this commandline for automation purposes. Please update the filter macros to remove false positives."],
  "from": "now-6m",
  "interval": "5m",
  "license": "",
  "max_signals": 100,
  "name": "OpenAI GPT4-o Linux Possible Cronjob Modification With Editor",
  "note": "Converted with OpenAI GPT4-o",
  "references": ["https://attack.mitre.org/techniques/T1053/003/"],
  "risk_score": 50,
  "rule_id": "dcc89bde-5f24-11ec-87ca-acde48001122",
  "severity": "medium",
  "tags": ["OpenAI GPT4-o", "XorDDos", "Linux Living Off The Land", "Linux Privilege Escalation", "Scheduled Tasks", "Linux Persistence Techniques", "Endpoint"],
  "threat": [
    {
      "framework": "MITRE ATT&CK",
      "tactic": {
        "id": "TA0003",
        "name": "Persistence",
        "reference": "https://attack.mitre.org/tactics/TA0003/"
      },
      "technique": [
        {
          "id": "T1053",
          "name": "Scheduled Task/Job",
          "reference": "https://attack.mitre.org/techniques/T1053/",
          "subtechnique": [
            {
              "id": "T1053.003",
              "name": "Cron",
              "reference": "https://attack.mitre.org/techniques/T1053/003/"
            }
          ]
        }
      ]
    }
  ],
  "type": "eql",
  "version": 1,
  "language": "eql",
  "query": "process where process.name in (\"nano\", \"vim.basic\") or process.command_line regex \".*nano .*|.*vi .*|.*vim .*\" and process.command_line regex \".*/etc/cron.*|.*/var/spool/cron/.*|.*/etc/anacrontab.*\""
}