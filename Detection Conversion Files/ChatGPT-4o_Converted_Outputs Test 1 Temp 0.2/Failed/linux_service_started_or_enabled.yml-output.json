{
  "actions": [],
  "author": ["Teoderick Contreras", "OpenAI GPT4-o"],
  "description": "The following analytic detects the creation or enabling of services on Linux platforms using the systemctl or service tools. It leverages Endpoint Detection and Response (EDR) logs, focusing on process names, parent processes, and command-line executions. This activity is significant as adversaries may create or modify services to maintain persistence or execute malicious payloads. If confirmed malicious, this behavior could lead to persistent access, data theft, ransomware deployment, or other damaging outcomes. Monitoring and investigating such activities are crucial for maintaining the security and integrity of the environment. Converted with OpenAI GPT4-o.",
  "enabled": true,
  "false_positives": ["Administrator or network operator can use this commandline for automation purposes. Please update the filter macros to remove false positives."],
  "from": "now-360s",
  "interval": "5m",
  "investigation_fields": {
    "field_names": []
  },
  "max_signals": 100,
  "name": "OpenAI GPT4-o Linux Service Started Or Enabled",
  "references": ["https://attack.mitre.org/techniques/T1543/003/"],
  "risk_score": 42,
  "severity": "medium",
  "tags": ["OpenAI GPT4-o", "Linux Privilege Escalation", "Linux Persistence Techniques", "Linux Living Off The Land", "Scheduled Tasks", "Gomir"],
  "threat": [
    {
      "framework": "MITRE ATT&CK",
      "tactic": {
        "id": "TA0003",
        "name": "Persistence",
        "reference": "https://attack.mitre.org/tactics/TA0003/"
      },
      "technique": [
        {
          "id": "T1543",
          "name": "Create or Modify System Process",
          "reference": "https://attack.mitre.org/techniques/T1543/",
          "subtechnique": [
            {
              "id": "T1543.003",
              "name": "Windows Service",
              "reference": "https://attack.mitre.org/techniques/T1543/003/"
            }
          ]
        }
      ]
    }
  ],
  "type": "eql",
  "language": "eql",
  "query": "process where process.name in (\"systemctl\", \"service\") and process.command_line : (\"* start *\", \"* enable *\") and not process.os : \"Microsoft Windows\"",
  "index": ["logs-*"],
  "version": 1
}